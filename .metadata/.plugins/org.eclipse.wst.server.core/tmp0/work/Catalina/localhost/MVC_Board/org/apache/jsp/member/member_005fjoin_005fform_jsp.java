/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-04-28 00:40:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class member_005fjoin_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- 외부 CSS 파일 연결하기 -->\r\n");
      out.write("<link href=\"css/default.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<!-- \r\n");
      out.write("		Login, Join 링크 표시 영역(inc/top.jsp 페이지 삽입)\r\n");
      out.write("		삽입 대상은 현재 파일 기준 상대주소 사용\r\n");
      out.write("		(webapp 디렉토리를 가리키려면 / 사용) \r\n");
      out.write("		-->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/inc/top.jsp", out, false);
      out.write("\r\n");
      out.write("	</header>\r\n");
      out.write("	<article>\r\n");
      out.write("		<h1>회원 가입</h1>\r\n");
      out.write("		<form action=\"MemberJoinPro.me\" method=\"post\" name=\"fr\">\r\n");
      out.write("			<table border=\"1\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>이름</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"name\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>아이디</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"id\" placeholder=\"4 ~ 8글자 사이 입력\">\r\n");
      out.write("						<input type=\"button\" value=\"ID중복확인\" onclick=\"checkDupId()\">\r\n");
      out.write("						<span id=\"checkIdResult\"></span>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>비밀번호</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<!-- 키 누를때마다 checkPasswd() 함수에 입력받은 패스워드 전달하여 호출 -->\r\n");
      out.write("						<input type=\"password\" name=\"passwd\" onkeyup=\"checkPasswd(this.value)\" placeholder=\"8 ~ 16글자 사이 입력\">\r\n");
      out.write("						<span id=\"checkPasswdResult\"></span>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>비밀번호확인</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<!-- 키 누를때마다 checkConfirmPasswd() 함수에 입력받은 패스워드 전달하여 호출 -->\r\n");
      out.write("						<input type=\"password\" name=\"passwd2\" onkeyup=\"checkConfirmPasswd(this.value)\">\r\n");
      out.write("						<span id=\"checkConfirmPasswdResult\"></span>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>주민번호</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"jumin1\" onkeyup=\"checkJumin1(this.value)\"> -\r\n");
      out.write("						<input type=\"text\" name=\"jumin2\" onkeyup=\"checkJumin2(this.value)\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>E-Mail</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"email1\"> @\r\n");
      out.write("						<input type=\"text\" name=\"email2\">\r\n");
      out.write("						<select name=\"emailDomain\" onchange=\"selectDomain(this.value)\">\r\n");
      out.write("							<option value=\"\">직접입력</option>\r\n");
      out.write("							<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("							<option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("							<option value=\"nate.com\">nate.com</option>\r\n");
      out.write("						</select>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>직업</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<select name=\"job\">\r\n");
      out.write("							<option value=\"\">항목을 선택하세요</option>\r\n");
      out.write("							<option value=\"개발자\">개발자</option>\r\n");
      out.write("							<option value=\"DB엔지니어\">DB엔지니어</option>\r\n");
      out.write("							<option value=\"서버엔지니어\">서버엔지니어</option>\r\n");
      out.write("						</select>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>성별</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"radio\" name=\"gender\" value=\"남\">남\r\n");
      out.write("						<input type=\"radio\" name=\"gender\" value=\"여\">여\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>취미</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"checkbox\" name=\"hobby\" value=\"여행\">여행\r\n");
      out.write("						<input type=\"checkbox\" name=\"hobby\" value=\"독서\">독서\r\n");
      out.write("						<input type=\"checkbox\" name=\"hobby\" value=\"게임\">게임\r\n");
      out.write("						<!-- 전체선택 체크박스 클릭 시 체크상태(checked 속성의 true 또는 false) 를 함수에 전달 -->\r\n");
      out.write("						<input type=\"checkbox\" value=\"전체선택\" onclick=\"checkAll(this.checked)\">전체선택\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>가입동기</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<textarea rows=\"5\" cols=\"40\" name=\"motivation\"></textarea>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\" align=\"center\">\r\n");
      out.write("						<input type=\"submit\" value=\"가입\">\r\n");
      out.write("						<input type=\"reset\" value=\"초기화\">\r\n");
      out.write("						<input type=\"button\" value=\"돌아가기\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</article>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
