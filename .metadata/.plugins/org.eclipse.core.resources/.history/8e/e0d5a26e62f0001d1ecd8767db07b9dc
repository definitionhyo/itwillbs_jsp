package action;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import svc.BoardDeleteProService;
import svc.BoardDetailService;
import vo.ActionForward;
import vo.BoardBean;

public class BoardDeleteProAction implements Action {

	@Override
	public ActionForward execute(HttpServletRequest request, HttpServletResponse response) {
		System.out.println("BoardDeleteProAction");
		
		ActionForward forward = null;
		
		// 글 삭제에 필요한 글번호, 패스워드 파라미터 가져오기
		int board_num = Integer.parseInt(request.getParameter("board_num"));
		String board_pass = request.getParameter("board_pass");
//		System.out.println("board_num = " + board_num + ", board_pass = " + board_pass);
		// 페이지번호(pageNum)는 현재 작업에서 실제로 활용되는 데이터가 아니므로
		// 다음 페이지 이동 시 URL 또는 request 객체에 전달하기만 하면 된다!
		// 또한, Dispatch 방식 포워딩 시 URL 유지되므로 별도의 작업 불필요
		
		// BoardDeleteProService - isBoardWriter() 메서드를 호출하여
		// 글 삭제 가능 여부 판별
		// => 파라미터 : 글번호, 패스워드    리턴타입 : boolean(isBoardWriter)
		BoardDeleteProService service = new BoardDeleteProService();
		boolean isBoardWriter = service.isBoardWriter(board_num, board_pass);
		
		// 작업 결과 판별
		// 만약, 일치하지 않으면(isBoardWriter 가 false)
		// 자바스크립트를 사용하여 "삭제 권한이 없습니다!" 출력 후 이전페이지로 돌아가기
		if(!isBoardWriter) {
			try {
				response.setContentType("text/html; charset=UTF-8");
				PrintWriter out = response.getWriter();
				out.print("<script>");
				out.print("alert('삭제 권한이 없습니다!');");
				out.print("history.back();");
				out.print("</script>");
				out.flush();
			} catch (IOException e) {
				e.printStackTrace();
			}
		} else {
			// ActionForward 객체를 사용하여 글목록(BoardList.bo) 페이지로 리다이렉트
			forward = new ActionForward();
			forward.setPath("BoardList.bo?pageNum=" + request.getParameter("pageNum"));
			forward.setRedirect(true);
		}
		
		return forward;
	}

}









