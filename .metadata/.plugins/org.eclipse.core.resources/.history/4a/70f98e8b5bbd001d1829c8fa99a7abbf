<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script type="text/javascript">
	/*
	[ 함수(function) ]
	- 특정 작업을 수행하는 코드들의 모음집(= 묶음)
	- 수행할 작업을 함수 정의를 통해 기술하여 사용 가능
	- 함수 정의하는 것 만으로는 실행되지 않으며, 반드시 호출을 통해 실행해야한다!
	- 내장 함수 vs 사용자 정의 함수
	  => 내장 함수는 자바스크립트에서 미리 정의하여 제공하는 함수(alert(), prompt() 등)
	
	[ 사용자 정의 함수 ]
	- 자바스크립트에서 제공되는 내장 함수 외에 개발자가 직접 정의하는 함수
	- 자바의 메서드와 달리 접근제한자 및 리턴타입을 명시하지 않으며
	  파라미터 변수 지정 시 데이터타입도 명시하지 않음
	- <script> 태그 내의 자바스크립트 코드는 기본적으로 웹페이지 로딩 시 바로 실행되지만
	  함수를 정의할 경우에는 반드시 호출을 통해 실행 가능함
	- 정의된 함수는 <script> 태그 내의 아무 위치에서나 호출 가능
	- 함수를 호출하여 실행하면 함수 내로 제어흐름이 이동하고,
	  함수 내에서 작업이 끝나면 반드시 함수를 호출한 곳으로 제어흐름이 되돌아온다.
	
	< 사용자 정의 함수 기본 문법 >
	function 함수이름([매개변수...]) {
		// 외부로부터 함수가 호출되면 실행할 코드들...
		[return [값];]
	}
	
	< 함수의 4가지 형태 >
	- 함수는 매개변수와 리턴값 유무에 따라 구성요소가 달라짐
	- 전달인자(Argument, 아규먼트) : 함수 호출 시 전달하는 값(= 데이터)
	- 매개변수(Parameter, 파라미터) : 함수 호출 시 전달하는 값(= Argument)을 저장할 변수
	- 리턴값 : 함수 실행 후 호출한 곳으로 돌아갈 때 함께 가지고 갈(= 전달할 값 = 리턴할 값)
	
	1. 매개변수도 없고, 리턴값도 없는 함수
	2. 매개변수는 없고, 리턴값만 있는 함수
	3. 매개변수만 있고, 리턴값은 없는 함수
	4. 매개변수도 있고, 리턴값도 있는 함수
	*/
	
	// 자바스크립트 함수는 선언(정의)한 위치보다 앞쪽(윗쪽)에서도 호출 가능함
// 	showMessage();
	
	// ---------------------------------------------------------
	// 1. 매개변수도 없고, 리턴값도 없는 함수
	// showMessage() 함수 정의 => 파라미터 : 없음, 리턴값 : 없음
	function showMessage() {
		alert("showMessage() 함수 호출됨!");
	}
	// => 이 함수(showMessage())는 반드시 호출을 통해 실행 가능하다!
	
	// showMessage() 함수 호출
	// => 함수 정의(선언) 형태를 그대로 지정하여 호출
// 	showMessage();
	
	// ---------------------------------------------------------
	// callSister() 함수 정의 => 파라미터 : 없음, 리턴값 : 없음
	function callSister() {
		document.write("동생 : 오빠 방에 가서 불을 껐다!<br>"); // 1번
	} // 함수 실행이 종료되면 호출한 위치로 제어흐름이 다시 되돌아감
	
	document.write("동생아! 불 좀 꺼라!<br>"); // 2번
	callSister(); // callSister() 함수가 정의된 위치로 코드 제어흐름이 이동함
	document.write("동생이 불을 끄고 갔다!<br>"); // 3번
	// => 출력문 실행 순서 : 2번 -> 1번(함수 내에서 출력) -> 3번
	
	// callSister() 함수 재사용(다시 호출)
	callSister();
	// ------------------------------------------------------------
	// 자신의 이름을 10번 출력하는 함수 printName() 정의
	function printName() {
		for(let i = 1; i <= 10; i++) {
			document.write(i + " : 이연태<br>");
		}
	}
	
	// printName() 함수 호출
// 	printName();
// 	printName();
</script>

<!-- 외부 자바스크립트 파일(test1.js) 불러오기 -->
<!-- 현재 파일과 test1.js 파일이 같은 디렉토리에 위치하므로 src 속성에 파일명만 지정 -->
<!-- 외부 파일 불러오는 script 태그 내에 코드 작성 시 동작하지 않는다! -->
<!-- 주의! 외부 파일 불러오는 script 태그 이후로 해당 파일 내의 함수 호출이 가능하다! -->
<script src="test1.js"></script>

</head>
<body>
	<script type="text/javascript">
		// 정의된 함수는 별도의 스크립트 블럭에서도 호출 가능함
// 		showMessag(); // 함수 이름이 틀리거나 없을 경우 오류 발생(showMessag is not defined)

// 		printName(); // 호출 가능
	</script>
</body>
</html>












