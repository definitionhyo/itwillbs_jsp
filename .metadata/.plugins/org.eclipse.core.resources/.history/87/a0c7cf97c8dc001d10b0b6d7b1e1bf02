package jsp10_jdbc_dao;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/jsp10_jdbc_dao/DbcpSelect")
public class DbcpSelectServlet extends HttpServlet {
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.println("DbcpSelectServlet");
		
		StudentDAO dao = new StudentDAO();
		
		// 학생 목록 조회 요청을 위한 StudentDAO - selectStudentList() 메서드 호출
		// => 파라미터 : 없음   리턴타입 : StudentDTO(student)
//		StudentDTO student = dao.selectStudentList();
//		System.out.println(student); // toString() 생략됨
		
		// 학생 목록 조회 요청을 위한 StudentDAO - selectStudentList() 메서드 호출
		// => 파라미터 : 없음   리턴타입 : List<StudentDTO>(studentList)
		List<StudentDTO> studentList
		
		// 다음 페이지로 포워딩 시 데이터를 함께 전송하려면
		// request 객체의 setAttribute() 메서드를 호출하여 전송할 데이터를 저장해야한다!
		// 단, request 객체가 다음 페이지까지 유지되어야 하므로 Dispatch 방식 포워딩 필수!
		request.setAttribute("student", student); // 속성명 student 로 StudentDTO 객체 저장
		
		// 학생 목록 정보를 표시할 select.jsp 페이지로 포워딩
		// => Dispatch 방식으로 포워딩
		// => 1) 이전 요청에서 사용된 서블릿 주소가 그대로 유지됨(= jsp 페이지 노출 X)
		// => 2) 이전 요청에서 생성된 request, response 객체가 그대로 유지됨
		//       (따라서, 전송할 데이터가 있을 경우 request 객체에 저장하여 전송 가능함)
		RequestDispatcher dispatcher = request.getRequestDispatcher("select.jsp");
		dispatcher.forward(request, response);
	}

}















