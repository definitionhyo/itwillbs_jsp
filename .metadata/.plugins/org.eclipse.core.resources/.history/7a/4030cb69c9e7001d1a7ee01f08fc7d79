package action;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import svc.MemberJoinProService;
import vo.ActionForward;
import vo.MemberBean;

// FrontController 를 보조할 Action 클래스 정의
// => 공통된 메서드 execute() 를 직접 정의하지 않고
//    Action 인터페이스를 상속받아 추상메서드 execute() 를 오버라이딩(구현)
public class MemberJoinProAction implements Action {

	// 프론트 컨트롤러(MemberFrontContoller)로부터 호출받아
	// 회원가입 비즈니스 로직을 수행할 execute() 메서드 정의
	// => 컨트롤러 역할을 수행하므로 FrontController 와 마찬가지로 request, response 객체 필요
	// => 파라미터 : HttpServletRequest(request), HttpServletResponse(response) 객체
	// => 리턴타입 : vo.ActionForward
	// => 추상메서드를 갖는 Action 인터페이스를 implements 했으므로 메서드 오버라이딩 필수!
	@Override
	public ActionForward execute(HttpServletRequest request, HttpServletResponse response) {
		System.out.println("MemberJoinProAction");
		
		// 포워딩 정보를 저장하기 위한 ActionForward 타입 변수 선언
		ActionForward forward = null;
		
		// 회원가입 폼에서 입력받은 폼 파라미터 가져오기
		// => 데이터 전송 객체인 MemberBean 객체 생성 후 폼 파라미터 데이터 저장하기 
		// => 이메일과 주민번호는 2개의 입력 항목을 하나로 결합하여 저장
		MemberBean member = new MemberBean();
		member.setName(request.getParameter("name"));
		member.setId(request.getParameter("id"));
		member.setPasswd(request.getParameter("passwd"));
		member.setJumin(
				request.getParameter("jumin1") + "-" + request.getParameter("jumin2"));
		member.setEmail(
				request.getParameter("email1") + "@" + request.getParameter("email2"));
		member.setJob(request.getParameter("job"));
		member.setGender(request.getParameter("gender"));
		
		String[] hobbies = request.getParameterValues("hobby");
		
		if(hobbies !=null) {
		member.setHobby(""); // 수행하지 않으면 초기값 null 값이 저장되어 있음
		for(String hobby : hobbies) {
			member.setHobby(member.getHobby() + hobby + "/");  
			}
		}
		member.setMotivation(request.getParameter("motivation"));
		MemberJoinProService service = new MemberJoinProService();
		boolean isJoinSuccess = service.joinMember(member);
		
		// 가입 작업 결과 판별
		if(!isJoinSuccess) { // 가입 실패
//			System.out.println("가입 실패!");
			try {
				response.setContentType("text/html; charset=UTF-8");
				
				PrintWriter out = response.getWriter();
				out.println("<script>");
				out.println("alert('회원가입 실패')");   //print 는 안에 ; 넣어야됨
				out.println("history.back()");  //print 는 안에 ; 넣어야됨
				out.println("</script>");
				out.flush();
			} catch (IOException e) {
				
				e.printStackTrace();
			}
		
		} else { // 가입 성공
			// 포워딩 정보를 저장할 ActionFoward 인스턴스 생성
			forward = new ActionForward();
			// 포워딩 경로(메인페이지 = "./") 저장 => ActionForward 객체의 setPath()
			forward.setPath("./");
			// 포워딩 방식(리다이렉트) 저장 => ActionForward 객체의 setRedirect()
			forward.setRedirect(true);
		}
		
		return forward; // => MemberFrontController 로 리턴
		
	}
	
}














