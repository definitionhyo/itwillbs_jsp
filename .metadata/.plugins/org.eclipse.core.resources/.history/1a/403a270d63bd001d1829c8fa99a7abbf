<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script type="text/javascript">
	/*
	[ 리턴값이 있는 함수 ]
	- 함수 실행 후 원래 위치로 돌아갈 때 호출한 곳으로 전달하는 값(데이터)을 리턴값이라고 함
	- 자바의 메서드와 달리 함수 선언 시 별도의 리턴타입을 지정하지 않고
	  함수 내에서 return 문을 사용하여 데이터를 리턴할 수 있음
	  (리턴하는 데이터타입에 따라 자동으로 타입이 결정됨)
	- 단, 리턴할 값이 없어도 return 문만 사용하여 함수 종료 가능
	- 함수 호출한 곳에서 리턴되는 데이터(리턴값)를 전달받아 사용 가능
	- 동시에 리턴 가능한 값은 하나뿐이다!
	
	< 기본 문법 >
	function 함수명() {
		// 작업 수행
		// 함수 호출한 곳으로 값을 리턴하거나 함수 종료하기 위해 return 문 사용
		return [리턴값];
	}
	*/
	
	// 2. 매개변수는 없고, 리턴값만 있는 함수 정의
	// 함수 호출 시 "Hello, World!" 문자열을 리턴하는 getMessage() 함수 정의
	// => 1번 형태와 동일하나 블럭 내에서 return 문이 추가됨
	function getMessage() {
// 		alert("getMessage() 함수 호출됨!");
		
		// 리턴할 데이터를 return 문 뒤에 기술
		return "Hello, World!"; // getMessage() 함수 호출한 곳으로 리턴값이 전달됨
	}
	
	// getMessage() 함수를 호출하여 리턴되는 값을 result 변수에 저장 후 출력
// 	let result = getMessage();
	// => "Hello, World!" 문자열이 리턴되면 getMessage() 함수 호출 코드 대신 문자열이 위치하고
	//    대입 연산자에 의해 result 변수에 "Hello, World!" 문자열이 저장됨
	// => 결국, let result = "Hello, World!"; 코드와 동일한 결과가 만들어진다!
// 	document.write("리턴값 : " + result);
	
	// ---------------------------------------------------------------------
	// 함수 호출 시 문자열 "물" 을 리턴하는 callSister() 함수 정의
	function callSister() {
		document.write("동생 : 오빠가 물 떠오라고 시켰다!<br>");
// 		return "물"; // 데이터를 직접 리턴해도 되지만
		// 변수를 사용하여 데이터를 저장 후 변수를 리턴해도 동일함
		let hand = "물2";
		return hand;
	}
	
	// callSister() 함수 호출 후 리턴되는 데이터("물")을 전달받아 
	// 변수 result2 에 저장 후 출력
// 	document.write("동생아! 물 좀 떠온나!<br>");
// 	let result2 = callSister();
// 	document.write("동생이 떠다 준 것 : " + result2 + "<br>");
	// 리턴값을 변수에 저장하지 않고 직접 사용도 가능함
// 	document.write("동생이 떠다 준 것 : " + callSister() + "<br>");
	// => 주의! 출력문 내에 함수 호출 코드를 기술해도 출력 결과는 동일하다!
	//    출력문이 완성된 후에 출력되므로 완성하기 위해서 함수로 이동하여 리턴값을 받아온다!
	
	// ------------------------------------------------------------------------------
	// 1 ~ 10 까지의 합(55)을 계산하여 리턴하는 sum() 함수 정의
	function sum() {
		let sum = 0; // 합계를 누적할 누적 변수
		
		// for문을 사용하여 1 ~ 10 까지 1씩 증가하면서 합계에 i값 누적
		
		return sum;
	}
	
	// sum() 함수를 호출하여 합계를 리턴받아 출력하기
	document.write("1 ~ 10 까지의 합 = " + sum());
</script>
</head>
<body>

</body>
</html>












