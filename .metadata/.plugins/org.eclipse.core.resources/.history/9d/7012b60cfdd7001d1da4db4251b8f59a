package jsp08_jdbc;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

//@WebServlet("/JdbcConnectMain")
@WebServlet("/jsp08_jdbc/JdbcConnect1")
public class JdbcConnect1Servlet extends HttpServlet {
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.println("JdbcConnect1Servlet");
		
		try {
			// JDBC 연동 작업 4단계
			// 1단계. JDBC 드라이버 로드
			// => java.lang 패키지의 Class 클래스의 static 메서드 forName() 호출하여
			//    드라이버 클래스가 위치한 패키지명과 클래스명을 문자열 파라미터로 전달
			// => 반드시, 드라이버 클래스가 포함된 라이브러리(jar 파일)가 
			//    Build path 에 추가되어 있어야 한다!
			Class.forName("com.mysql.cj.jdbc.Driver");
			
			// 드라이버 클래스가 존재하지 않거나, 이름이 틀린 경우
			// WEB 기준 HTTP 상태 500 - 내부 서버 오류) 발생
			// 자바 기준 ClassNotFoundException 예외 발생
//			Class.forName("com.mysql.cj.jdbc.Dri"); // 드라이버 클래스 이름이 틀린 경우
			// 예외 메세지 : java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Dri
			//                         ~~~~~~~~~~~~~~~~ 이 부분 주의 ~~~~~~~~~~~~~~~
			// => com.mysql.cj.Dri 라는 클래스가 없다는 의미의 예외가 발생했으므로
			//    1) 클래스 파일 확인(Build path 등록 확인)
			//    2) 드라이버 클래스명(패키지 포함)이 올바르게 입력되었는지 확인
			// => 해당 예외를 처리하기 위해 try/catch 블럭을 사용해야하며
			//    예외 발생 예상 지점을 블럭 지정 후 Alt + Shift + Z 단축키를 통해
			//    팝업 메뉴의 Try/Catch Block 항목 클릭(자세한건 자바에서...)
			
			
			System.out.println("드라이버 로드 성공!");
		} catch (ClassNotFoundException e) {
			System.out.println("드라이버 로드 실패!");
			e.printStackTrace();
		}
		
	}

}













